apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}-operator
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}-operator
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: {{ .Values.name }}-sa
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Values.name }}-web
      containers:        
        - name: operator
          image: {{ .Values.image.operator }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-operator
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
        - name: redis
          image: {{ .Values.image.redis }}
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 15
        - name: web
          image: {{ .Values.image.web }}
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - cp -L /nginx-conf/nginx-conf.conf /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /nginx-conf
        - name: ws
          image: {{ .Values.image.ws }}
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-ws
        - name: cron
          image: {{ .Values.image.operator }}
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["while true; ./cron-ci;do sleep 10; done;"]